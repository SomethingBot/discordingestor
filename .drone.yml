kind: pipeline
type: docker
name: build

trigger:
  event:
    - push
    - tag
    - pull_request

steps:
  - name: fmt and tidy
    image: golang:1.18
    commands:
      - test -z $(go fmt ./...)
      - go mod tidy
      - git diff --exit-code -- go.mod go.sum
      - git diff --exit-code -- go.mod go.sum > test -z
  - name: build and vet
    image: golang:1.18
    commands:
      - go build .
      - go vet -race -v ./...
  - name: test
    image: golang:1.18
    commands:
      - go test -v ./... -short
---
kind: pipeline
type: docker
name: test

trigger:
  event:
    - push
    - tag

depends_on:
  - build

steps:
  - name: test-integration
    image: golang:1.18
    commands:
      - go test -v ./...
    environment:
      discordapikey:
        from_secret: discordapikey
---
kind: pipeline
type: docker
name: tagged version in libinfo

trigger:
  event:
    - push

#depends_on:
#  - build

steps:
  - name: check version
    image: golang:1.18
    commands:
      - git pull origin --tags master
      - echo Current latest tag is $(git tag --sort=committerdate | tail -1) HEAD is $(git tag --points-at HEAD)
      - echo Current tag in discord/libinfo/info.go is $(grep "BotLibraryVersion =" discord/libinfo/info.go | awk '{print substr($3, 2, length($3)-2)}')
      - test $(grep "BotLibraryVersion =" discord/libinfo/info.go | awk '{print substr($3, 2, length($3)-2)}') = $(git tag --sort=committerdate | tail -1 | awk '{print substr($0,2, length($0))}')